trigger: none
pr: none

pool:
  vmImage: ubuntu-20.04

parameters:
- name: foo
  default: bar

- name: azure_arm_connection
  displayName: Subscription
  values:
  - alsid_global_devops_test

variables:
- name: foo
  value: ${{ parameters.foo }}

stages:
  - stage: DeployTerraform
    # pool:
    #   vmImage: windows-2019
    dependsOn: []
    jobs:
    - job: DeployTF
      steps:
      - task: DownloadPipelineArtifact@2
        displayName: Download
        inputs:
          source: specific
          project: $(system.teamProject)
          pipeline: 49
          runVersion: latestFromBranch
          runBranch: $(Build.SourceBranch)
          tags: "$(Build.SourceBranchName)"
          artifact: terraform
          path: $(Pipeline.Workspace)/terraform

#       - template: ../templates/terraform.yaml
#         parameters:
#           global_arm_connection: ${{ parameters.global_arm_connection }}
#           terraform_artifacts: $(Pipeline.Workspace)/tf-base-saas-lab
#           terraform_state_key: ${{ parameters.global_customer_id }}-base-lab.tfstate
#           terraform_variable_file: base-lab.tfvars
# ##############

#       - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
#         displayName: Install Terraform
#         inputs:
#           terraformVersion: 1.0.11

#       - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
#         displayName: Terraform Init
#         inputs:
#           workingDirectory: ${{ parameters.terraform_artifacts }}
#           backendServiceArm: ${{ parameters.global_arm_connection }}
#           backendAzureRmResourceGroupName: $(terraform_state_storage_rg)
#           backendAzureRmStorageAccountName: $(terraform_state_storage_account)
#           backendAzureRmContainerName: $(terraform_state_storage_container)
#           backendAzureRmKey: ${{ parameters.terraform_state_key }}

#       - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
#         displayName: Terraform Plan
#         inputs:
#           command: plan
#           workingDirectory: ${{ parameters.terraform_artifacts }}
#           commandOptions: --var-file ${{ parameters.terraform_variable_file }} -out run.plan
#           environmentServiceNameAzureRM: ${{ parameters.global_arm_connection }}

#       - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
#         displayName: Terraform Validate and Apply
#         inputs:
#           command: apply
#           workingDirectory: ${{ parameters.terraform_artifacts }}
#           commandOptions: run.plan
#           environmentServiceNameAzureRM: ${{ parameters.global_arm_connection }}
#           backendServiceArm: ${{ parameters.global_arm_connection }}